// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'tmap_driveguide_tbt.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

TmapDriveGuideTBT _$TmapDriveGuideTBTFromJson(Map<String, dynamic> json) =>
    TmapDriveGuideTBT(
      tbtDistance: json['tbt_distance'] as int? ?? -1,
      tbtTime: json['tbt_time'] as int? ?? -1,
      tbtTurnType:
          $enumDecodeNullable(_$TBTTurnTypeEnumMap, json['tbt_turn_type']) ??
              TBTTurnType.na,
      tollfee: json['tollfee'] as int? ?? -1,
      roadName: json['road_name'] as String? ?? "",
      crossName: json['cross_name'] as String? ?? "",
      nearDirectionName: json['near_direction_name'] as String? ?? "",
      midDirectionName: json['mid_direction_name'] as String? ?? "",
      farDirectionName: json['far_direction_name'] as String? ?? "",
      mainText: json['main_text'] as String? ?? "",
      complexIntersectionVoiceType: $enumDecodeNullable(
              _$ComplexIntersectionVoiceTypeEnumMap,
              json['complex_intersection_voice_type']) ??
          ComplexIntersectionVoiceType.strait,
    );

Map<String, dynamic> _$TmapDriveGuideTBTToJson(TmapDriveGuideTBT instance) =>
    <String, dynamic>{
      'tbt_distance': instance.tbtDistance,
      'tbt_time': instance.tbtTime,
      'tbt_turn_type': _$TBTTurnTypeEnumMap[instance.tbtTurnType]!,
      'tollfee': instance.tollfee,
      'road_name': instance.roadName,
      'cross_name': instance.crossName,
      'near_direction_name': instance.nearDirectionName,
      'mid_direction_name': instance.midDirectionName,
      'far_direction_name': instance.farDirectionName,
      'main_text': instance.mainText,
      'complex_intersection_voice_type': _$ComplexIntersectionVoiceTypeEnumMap[
          instance.complexIntersectionVoiceType]!,
    };

const _$TBTTurnTypeEnumMap = {
  TBTTurnType.turnPtMap: 'turnPtMap',
  TBTTurnType.turnPtTile: 'turnPtTile',
  TBTTurnType.turnNotSerExp: 'turnNotSerExp',
  TBTTurnType.turnNotSerNormal: 'turnNotSerNormal',
  TBTTurnType.turnNotSerSpec: 'turnNotSerSpec',
  TBTTurnType.strRight: 'strRight',
  TBTTurnType.strLeft: 'strLeft',
  TBTTurnType.turnStr: 'turnStr',
  TBTTurnType.turnLeft: 'turnLeft',
  TBTTurnType.turnRight: 'turnRight',
  TBTTurnType.turnUturn: 'turnUturn',
  TBTTurnType.turnPturn: 'turnPturn',
  TBTTurnType.turnLeft8: 'turnLeft8',
  TBTTurnType.turnLeft10: 'turnLeft10',
  TBTTurnType.turnRignt2: 'turnRignt2',
  TBTTurnType.turnRignt4: 'turnRignt4',
  TBTTurnType.turnDir1: 'turnDir1',
  TBTTurnType.turnDir2: 'turnDir2',
  TBTTurnType.turnDir3: 'turnDir3',
  TBTTurnType.turnDir4: 'turnDir4',
  TBTTurnType.turnDir5: 'turnDir5',
  TBTTurnType.turnDir6: 'turnDir6',
  TBTTurnType.turnDir7: 'turnDir7',
  TBTTurnType.turnDir8: 'turnDir8',
  TBTTurnType.turnDir9: 'turnDir9',
  TBTTurnType.turnDir10: 'turnDir10',
  TBTTurnType.turnDir11: 'turnDir11',
  TBTTurnType.turnDir12: 'turnDir12',
  TBTTurnType.turnStrRight: 'turnStrRight',
  TBTTurnType.turnStrLeft: 'turnStrLeft',
  TBTTurnType.laneStr: 'laneStr',
  TBTTurnType.laneLeft: 'laneLeft',
  TBTTurnType.laneRight: 'laneRight',
  TBTTurnType.lane1: 'lane1',
  TBTTurnType.lane2: 'lane2',
  TBTTurnType.lane3: 'lane3',
  TBTTurnType.lane4: 'lane4',
  TBTTurnType.lane5: 'lane5',
  TBTTurnType.lane6: 'lane6',
  TBTTurnType.lane7: 'lane7',
  TBTTurnType.lane8: 'lane8',
  TBTTurnType.lane9: 'lane9',
  TBTTurnType.lane10: 'lane10',
  TBTTurnType.firstExit: 'firstExit',
  TBTTurnType.secExit: 'secExit',
  TBTTurnType.firstLaneRight: 'firstLaneRight',
  TBTTurnType.secLaneRight: 'secLaneRight',
  TBTTurnType.firstLaneLeft: 'firstLaneLeft',
  TBTTurnType.secLaneLeft: 'secLaneLeft',
  TBTTurnType.hipassLeft: 'hipassLeft',
  TBTTurnType.hipassRight: 'hipassRight',
  TBTTurnType.hipassCenter: 'hipassCenter',
  TBTTurnType.expInRight: 'expInRight',
  TBTTurnType.expInLeft: 'expInLeft',
  TBTTurnType.expInStr: 'expInStr',
  TBTTurnType.expOutRight: 'expOutRight',
  TBTTurnType.expOutLeft: 'expOutLeft',
  TBTTurnType.expOutStr: 'expOutStr',
  TBTTurnType.saexpInRight: 'saexpInRight',
  TBTTurnType.saexpInLeft: 'saexpInLeft',
  TBTTurnType.saexpInStr: 'saexpInStr',
  TBTTurnType.saexpOutRight: 'saexpOutRight',
  TBTTurnType.saexpOutLeft: 'saexpOutLeft',
  TBTTurnType.saexpOutStr: 'saexpOutStr',
  TBTTurnType.roadRight: 'roadRight',
  TBTTurnType.roadLeft: 'roadLeft',
  TBTTurnType.underIn: 'underIn',
  TBTTurnType.overIn: 'overIn',
  TBTTurnType.tunnelIn: 'tunnelIn',
  TBTTurnType.bridge: 'bridge',
  TBTTurnType.underOut: 'underOut',
  TBTTurnType.overOut: 'overOut',
  TBTTurnType.dir1: 'dir1',
  TBTTurnType.dir2: 'dir2',
  TBTTurnType.dir3: 'dir3',
  TBTTurnType.dir4: 'dir4',
  TBTTurnType.dir5: 'dir5',
  TBTTurnType.dir6: 'dir6',
  TBTTurnType.dir7: 'dir7',
  TBTTurnType.dir8: 'dir8',
  TBTTurnType.dir9: 'dir9',
  TBTTurnType.dir10: 'dir10',
  TBTTurnType.dir11: 'dir11',
  TBTTurnType.dir12: 'dir12',
  TBTTurnType.sa: 'sa',
  TBTTurnType.saIn: 'saIn',
  TBTTurnType.tolExp: 'tolExp',
  TBTTurnType.tolNormal: 'tolNormal',
  TBTTurnType.ferryIn: 'ferryIn',
  TBTTurnType.ferryOut: 'ferryOut',
  TBTTurnType.startdir1: 'startdir1',
  TBTTurnType.startdir2: 'startdir2',
  TBTTurnType.startdir3: 'startdir3',
  TBTTurnType.startdir4: 'startdir4',
  TBTTurnType.startdir5: 'startdir5',
  TBTTurnType.startdir6: 'startdir6',
  TBTTurnType.startdir7: 'startdir7',
  TBTTurnType.startdir8: 'startdir8',
  TBTTurnType.startdir9: 'startdir9',
  TBTTurnType.startdir10: 'startdir10',
  TBTTurnType.startdir11: 'startdir11',
  TBTTurnType.startdir12: 'startdir12',
  TBTTurnType.destStr: 'destStr',
  TBTTurnType.destLeft: 'destLeft',
  TBTTurnType.destRight: 'destRight',
  TBTTurnType.posRight: 'posRight',
  TBTTurnType.via1: 'via1',
  TBTTurnType.via2: 'via2',
  TBTTurnType.via3: 'via3',
  TBTTurnType.via4: 'via4',
  TBTTurnType.via5: 'via5',
  TBTTurnType.noticeSpeed: 'noticeSpeed',
  TBTTurnType.noticeAccident: 'noticeAccident',
  TBTTurnType.noticeTurn: 'noticeTurn',
  TBTTurnType.noticeRock: 'noticeRock',
  TBTTurnType.noticePol: 'noticePol',
  TBTTurnType.noticePol2: 'noticePol2',
  TBTTurnType.start: 'start',
  TBTTurnType.goal: 'goal',
  TBTTurnType.goStraight: 'goStraight',
  TBTTurnType.acrossFromDestination: 'acrossFromDestination',
  TBTTurnType.inRoute: 'inRoute',
  TBTTurnType.inExp: 'inExp',
  TBTTurnType.inSaexp: 'inSaexp',
  TBTTurnType.inSky: 'inSky',
  TBTTurnType.inUnder: 'inUnder',
  TBTTurnType.rdir1: 'rdir1',
  TBTTurnType.rdir2: 'rdir2',
  TBTTurnType.rdir3: 'rdir3',
  TBTTurnType.rdir4: 'rdir4',
  TBTTurnType.rdir5: 'rdir5',
  TBTTurnType.rdir6: 'rdir6',
  TBTTurnType.rdir7: 'rdir7',
  TBTTurnType.rdir8: 'rdir8',
  TBTTurnType.rdir9: 'rdir9',
  TBTTurnType.rdir10: 'rdir10',
  TBTTurnType.rdir11: 'rdir11',
  TBTTurnType.rdir12: 'rdir12',
  TBTTurnType.temp: 'temp',
  TBTTurnType.tollgate: 'tollgate',
  TBTTurnType.end: 'end',
  TBTTurnType.na: 'na',
};

const _$ComplexIntersectionVoiceTypeEnumMap = {
  ComplexIntersectionVoiceType.strait: 'strait',
  ComplexIntersectionVoiceType.leftLane: 'leftLane',
  ComplexIntersectionVoiceType.rightLane: 'rightLane',
  ComplexIntersectionVoiceType.lane1: 'lane1',
  ComplexIntersectionVoiceType.lane2: 'lane2',
  ComplexIntersectionVoiceType.lane3: 'lane3',
  ComplexIntersectionVoiceType.lane4: 'lane4',
  ComplexIntersectionVoiceType.lane5: 'lane5',
  ComplexIntersectionVoiceType.lane6: 'lane6',
  ComplexIntersectionVoiceType.lane7: 'lane7',
  ComplexIntersectionVoiceType.lane8: 'lane8',
  ComplexIntersectionVoiceType.lane9: 'lane9',
  ComplexIntersectionVoiceType.lane10: 'lane10',
  ComplexIntersectionVoiceType.laneGreen: 'laneGreen',
  ComplexIntersectionVoiceType.lanePink: 'lanePink',
  ComplexIntersectionVoiceType.laneBlue: 'laneBlue',
  ComplexIntersectionVoiceType.laneYellow: 'laneYellow',
  ComplexIntersectionVoiceType.leftRoad: 'leftRoad',
  ComplexIntersectionVoiceType.rightRoad: 'rightRoad',
  ComplexIntersectionVoiceType.firstExit: 'firstExit',
  ComplexIntersectionVoiceType.secondExit: 'secondExit',
  ComplexIntersectionVoiceType.firstRightRoad: 'firstRightRoad',
  ComplexIntersectionVoiceType.secondRightRoad: 'secondRightRoad',
  ComplexIntersectionVoiceType.firstLeftRoad: 'firstLeftRoad',
  ComplexIntersectionVoiceType.secondLeftRoad: 'secondLeftRoad',
  ComplexIntersectionVoiceType.leftExit: 'leftExit',
  ComplexIntersectionVoiceType.rightExit: 'rightExit',
  ComplexIntersectionVoiceType.left1stLane: 'left1stLane',
  ComplexIntersectionVoiceType.left2ndLane: 'left2ndLane',
  ComplexIntersectionVoiceType.left3rdLane: 'left3rdLane',
  ComplexIntersectionVoiceType.left4thLane: 'left4thLane',
  ComplexIntersectionVoiceType.right1stLane: 'right1stLane',
  ComplexIntersectionVoiceType.right2ndLane: 'right2ndLane',
  ComplexIntersectionVoiceType.right3rdLane: 'right3rdLane',
  ComplexIntersectionVoiceType.right4thLane: 'right4thLane',
  ComplexIntersectionVoiceType.left1Lane: 'left1Lane',
  ComplexIntersectionVoiceType.left2Lane: 'left2Lane',
  ComplexIntersectionVoiceType.left3Lane: 'left3Lane',
  ComplexIntersectionVoiceType.left4Lane: 'left4Lane',
  ComplexIntersectionVoiceType.right1Lane: 'right1Lane',
  ComplexIntersectionVoiceType.right2Lane: 'right2Lane',
  ComplexIntersectionVoiceType.right3Lane: 'right3Lane',
  ComplexIntersectionVoiceType.right4Lane: 'right4Lane',
};
